// Code generated by MockGen. DO NOT EDIT.
// Source: goVault/internal/core/vault/engine (interfaces: Engine)
//
// Generated by this command:
//
//	mockgen -destination ./../../../../mocks/core/vault/engine/in_memory/contract.go -package engine_mock . Engine
//

// Package engine_mock is a generated GoMock package.
package engine_mock

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockEngine is a mock of Engine interface.
type MockEngine struct {
	ctrl     *gomock.Controller
	recorder *MockEngineMockRecorder
	isgomock struct{}
}

// MockEngineMockRecorder is the mock recorder for MockEngine.
type MockEngineMockRecorder struct {
	mock *MockEngine
}

// NewMockEngine creates a new mock instance.
func NewMockEngine(ctrl *gomock.Controller) *MockEngine {
	mock := &MockEngine{ctrl: ctrl}
	mock.recorder = &MockEngineMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEngine) EXPECT() *MockEngineMockRecorder {
	return m.recorder
}

// Del mocks base method.
func (m *MockEngine) Del(ctx context.Context, key string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Del", ctx, key)
}

// Del indicates an expected call of Del.
func (mr *MockEngineMockRecorder) Del(ctx, key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Del", reflect.TypeOf((*MockEngine)(nil).Del), ctx, key)
}

// Get mocks base method.
func (m *MockEngine) Get(ctx context.Context, key string) (string, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockEngineMockRecorder) Get(ctx, key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockEngine)(nil).Get), ctx, key)
}

// Set mocks base method.
func (m *MockEngine) Set(ctx context.Context, key, value string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Set", ctx, key, value)
}

// Set indicates an expected call of Set.
func (mr *MockEngineMockRecorder) Set(ctx, key, value any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockEngine)(nil).Set), ctx, key, value)
}
